{"version":3,"sources":["components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","value","setValue","task","setTasks","onSubmit","e","preventDefault","text","className","type","placeholder","onChange","target","map","t","index","onClick","newTask","splice","removeTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA+CeA,EA7CF,WAET,MAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAoBA,OACI,gCACI,uBAAMC,SAhBI,SAACC,GACfA,EAAEC,iBACS,KAARN,IALHG,EAAS,CAAC,CAACI,KAMCP,IANJ,mBAAYE,KAOhBD,EAAS,MAYT,UACI,uBACIO,UAAU,OACVC,KAAK,OACLC,YAAY,WACZV,MAAOA,EACPW,SAAU,SAAAN,GAAC,OAAEJ,EAASI,EAAEO,OAAOZ,UAEnC,wBAAQQ,UAAU,MAAMC,KAAK,SAA7B,uBAEHP,EAAKW,KAAI,SAACC,EAAEC,GAAH,OACN,gCACI,yBAASP,UAAU,OAAnB,SAA2BM,EAAEP,OAC7B,wBAASC,UAAU,OAAOQ,QAAS,kBArBlC,SAACD,GACd,IAAME,EAAQ,YAAIf,GAClBe,EAAQC,OAAOH,EAAM,GACrBZ,EAASc,GAkB0CE,CAAWJ,IAAlD,sBAFMA,UC3BXK,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACI,cAAC,EAAD,OCMOa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d395287.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst Todo = () => {\r\n\r\n    const[value,setValue]=useState(\"\");\r\n    const [task,setTasks]=useState([]);\r\n\r\n    const addTask=(text)=>{\r\n        setTasks([{text},...task])\r\n    }\r\n\r\n    const handleClick=(e)=>{\r\n        e.preventDefault();\r\n        if(value!==\"\"){\r\n            addTask(value)\r\n            setValue(\"\")\r\n        }\r\n    }\r\n\r\n    const removeTask=(index)=>{\r\n        const newTask=[...task]\r\n        newTask.splice(index,1);\r\n        setTasks(newTask)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleClick} >\r\n                <input \r\n                    className='text'\r\n                    type=\"text\" \r\n                    placeholder='Add Task' \r\n                    value={value}\r\n                    onChange={e=>setValue(e.target.value)}                 \r\n                />\r\n                <button className='btn' type='submit'>Submit</button>\r\n            </form>\r\n            {task.map((t,index)=>(\r\n                <div key={index}>\r\n                    <section className='task'>{t.text}</section>\r\n                    <button  className='btn1' onClick={()=>removeTask(index)}>Delete</button> \r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import './App.css';\nimport Todo from './components/Todo.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}